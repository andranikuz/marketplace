version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: marketplace
    container_name: ${APP_NAME}
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
       - nfsmount:/var/www
       - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini:delegated
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - nfsmount:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/:delegated
    networks:
      - app-network

  #PSQL Service
  db:
    image: postgres
    container_name: ${APP_NAME}-psql
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./docker/psql/db-data:/var/lib/postgresql/data:delegated
    ports:
      - 5432:5432
    networks:
      - app-network

  #Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: ${APP_NAME}-es
    environment:
      - discovery.type=single-node
    volumes:
      - ./docker/elasticsearch:/usr/share/elasticsearch/data:delegated
    ports:
      - 9200:9200
    networks:
      - app-network

  #rabbitmq Service
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ${APP_NAME}-rabbitmq
    volumes:
      - ./docker/rabbitmq/etc/:/etc/rabbitmq/:delegated
      - ./docker/rabbitmq/data/:/var/lib/rabbitmq/:delegated
      - ./docker/rabbitmq/logs/:/var/log/rabbitmq/:delegated
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - app-network

  #Redis Service
  redis:
    image: 'redis'
    container_name: ${APP_NAME}-redis
    ports:
        - '6379:6379'
    volumes:
        - ./docker/redis:/data:delegated
    networks:
        - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  nfsmount:
      driver: local
      driver_opts:
          type: nfs
          o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
          device: ":/System/Volumes/Data/${PWD}"